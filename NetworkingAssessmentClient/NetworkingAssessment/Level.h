#pragma once
#include  <SFML/Graphics.hpp>
#include "Input.h"
#include "GameSprite.h"
#include "FlowerSprite.h"
#include "WaterSprite.h"
#include "Piller.h"
#include "Collision.h"

struct Bounds {

	int xBound = 0;
	int yBound = 0;
	bool boundFound = false;

};

class Level
{
public:
	Level();
	~Level();
	void initialize(sf::RenderWindow* wind);
	void update(float deltaTime);
	void render(float deltaTime);
	void onExit();

	int getNorthBounds() { return topLeftBounds.xBound; };
	int getSouthXBounds() { return bottomRightBounds.xBound; };
	int getWestBounds() { return topLeftBounds.yBound; };
	int getEastBounds() { return bottomRightBounds.yBound; };

private:
	void animations(float deltaTime);

	sf::RenderWindow* window;

	Bounds topLeftBounds;
	Bounds bottomRightBounds;


	float xPosition = 0.0f;
	float yPosition = 0.0f;
	int gridAmount = 27;
	GameSprite* sprites[19][25];


	int map1[19][25] = {
		//00 01 02 03 04 05 06 07 08 09 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 
		 {00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00},//00
		 {00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00},//01
		 {00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00},//02
		 {00,00,00,00,13,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,15,00,00,00,00},//03
		 {00,00,00,00,12,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,16,00,00,00,00},//04
		 {00,00,00,00,12,19,10,10,10,10,10,10,10,10,10,10,21,10,10,19,16,00,00,00,00},//05
		 {00,00,00,00,12,19,10,10,10,10,10,21,10,10,10,10,10,10,10,19,16,00,00,00,00},//06
		 {00,00,00,00,12,19,10,10,10,10,10,10,10,10,10,10,10,10,10,19,16,00,00,00,00},//07
		 {00,00,00,00,12,19,10,10,10,10,10,10,10,10,10,10,21,10,10,19,16,00,00,00,00},//08
		 {00,00,00,00,12,19,10,10,10,10,10,10,10,10,10,10,10,10,10,19,16,00,00,00,00},//09
		 {00,00,00,00,12,19,10,10,10,21,10,10,10,10,10,10,10,10,10,19,16,00,00,00,00},//10
		 {00,00,00,00,12,19,10,10,10,10,10,21,10,10,10,10,10,10,10,19,16,00,00,00,00},//11
		 {00,00,00,00,12,19,10,10,10,10,10,10,10,10,10,10,10,10,10,19,16,00,00,00,00},//12
		 {00,00,00,00,12,19,10,10,10,10,10,10,10,10,21,10,10,10,10,19,16,00,00,00,00},//13
		 {00,00,00,00,12,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,16,00,00,00,00},//14
		 {00,00,00,00,11,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,17,00,00,00,00},//15
		 {00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00},//16
		 {00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00},//17
		 {00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00} //18
	};


	int map[19][25] = {
		//00 01 02 03 04 05 06 07 08 09 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 
		 {13,14,14,14,14,14,14,14,14,14,14,14,14,00,00,00,00,00,00,00,00,00,00,00,00},//00
		 {12,10,10,10,10,10,10,10,10,10,10,10,10,19,19,19,00,00,00,00,00,00,00,00,00},//01
		 {12,10,10,10,10,10,21,10,10,10,10,10,19,19,19,19,00,00,00,00,00,00,00,00,00},//02
		 {12,10,10,10,10,10,10,10,10,10,10,10,19,19,19,19,00,00,00,00,00,00,00,00,00},//03
		 {12,10,10,10,10,10,10,10,10,10,10,10,10,19,19,19,00,00,00,00,00,00,00,00,00},//04
		 {12,10,21,10,10,10,10,10,10,10,10,10,19,19,19,19,00,00,00,00,00,00,00,00,00},//05
		 {12,10,10,10,10,10,10,10,10,10,10,10,10,19,19,19,00,00,00,00,00,00,00,00,00},//06
		 {12,10,10,10,10,10,10,10,10,10,10,10,10,10,19,19,00,00,00,00,00,00,00,00,00},//07
		 {12,10,10,10,10,10,10,10,10,10,10,10,19,19,19,19,00,00,00,00,00,00,00,00,00},//08
		 {12,10,10,10,10,10,10,10,10,10,10,10,10,19,19,19,00,00,00,00,00,00,00,00,00},//09
		 {12,10,10,10,10,10,10,10,10,21,10,10,10,19,19,19,00,00,00,00,00,00,00,00,00},//10
		 {12,10,10,10,10,10,10,10,10,10,10,10,19,19,19,19,00,00,00,00,00,00,00,00,00},//11
		 {12,10,10,10,10,10,10,10,10,10,10,10,19,19,19,19,00,00,00,00,00,00,00,00,00},//12
		 {12,10,10,10,10,10,10,10,10,10,10,10,19,19,19,19,00,00,00,00,00,00,00,00,00},//13
		 {12,10,10,10,21,10,10,10,10,10,10,10,10,10,19,19,00,00,00,00,00,00,00,00,00},//14
		 {12,10,10,10,10,10,10,10,10,10,10,10,10,10,19,19,00,00,00,00,00,00,00,00,00},//15
		 {12,10,10,10,10,10,10,10,21,10,10,10,10,19,19,19,00,00,00,00,00,00,00,00,00},//16
		 {12,10,10,10,10,10,10,10,10,10,10,10,19,19,19,19,00,00,00,00,00,00,00,00,00},//17
		 {11,18,18,18,18,18,18,18,18,18,18,18,00,00,00,00,00,00,00,00,00,00,00,00,00} //18
	};
	/**
	00 = Water
	11 = Bottom Left Corner Wall
	12 = Left Wall
	13 = Top Left Corner Wall
	14 = Top Wall
	15 = Top Right Corner Wall
	16 = Right Wall
	17 = Bottom Right Corner Wall
	18 = Bottom Wall
	10 = Grass
	19 = Sand
	20 = Dirt
	21 = Flower
	*/

	Piller piller1;
	Piller piller2;
	Piller piller3;

	sf::Texture dirtTexture;
	sf::Texture grassTexture;
	sf::Texture sandTexture;

	WaterSprite waterSprite;
	WaterSprite bottomLeftWaterCornerSprite;
	WaterSprite leftWaterWallSprite;
	WaterSprite topLeftWaterCornerSprite;
	WaterSprite topWaterWallSprite;
	WaterSprite topRightWaterCornerSprite;
	WaterSprite rightWaterWallSprite;
	WaterSprite bottomRightWaterCornerSprite;
	WaterSprite BottomWaterWallSprite;
	GameSprite dirtSprite;
	GameSprite grassSprite;
	FlowerSprite flowerSprite;
	GameSprite sandSprite;
};

